version: 2.1
orbs:
  python: circleci/python@1.0.0
  slack: circleci/slack@4.1

executors:
  luxquad-executor:
    environment:
      IMAGE_NAME: bartkim07120/ozet-core-api
      PLATFORM: OZET Core API
      slack_build_start: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$PLATFORM 의 빌드가 시작되었습니다. ",
                "emoji": true
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ">When : $(date +'%Y/%m/%d @%T')\n>SHA1 : $CIRCLE_SHA1"
                }
              ]
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                  "type": "mrkdwn",
                  "text": "> *Branch*\n- \`$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH\`\n> *Requester*\n- \`$CIRCLE_USERNAME\`"
              },
              "accessory": {
                "type": "image",
                "image_url": "https://i.ibb.co/JKfb103/free-icon-analysis-4624116.png",
                "alt_text": "Status Image"
              }
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Req No.* : \`$CIRCLE_WORKFLOW_ID\`\n*Job Status* : :large_green_circle:"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "CircleCI",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "${CIRCLE_BUILD_URL}",
                "action_id": "button-action"
              }
            },
            {
              "type": "divider"
            }
          ]
        }
      slack_task_fail: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$PLATFORM 의 작업이 실패했습니다.",
                "emoji": true
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ">When : $(date +'%Y/%m/%d @%T')\n>SHA1 : $CIRCLE_SHA1"
                }
              ]
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                  "type": "mrkdwn",
                  "text": "> *Branch*\n- \`$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH\`\n> *Requester*\n- \`$CIRCLE_USERNAME\`"
              },
              "accessory": {
                "type": "image",
                "image_url": "https://i.ibb.co/HVbJ5FC/free-icon-cancelled-5229496.png",
                "alt_text": "Status Image"
              }
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Req No.* : \`$CIRCLE_WORKFLOW_ID\`\n*Job Status* : :red_circle:"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "CircleCI",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "${CIRCLE_BUILD_URL}",
                "action_id": "button-action"
              }
            },
            {
              "type": "divider"
            }
          ]
        }
      slack_build_success: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$PLATFORM 의 빌드가 성공했습니다.",
                "emoji": true
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ">When : $(date +'%Y/%m/%d @%T')\n>SHA1 : $CIRCLE_SHA1"
                }
              ]
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                  "type": "mrkdwn",
                  "text": "> *Branch*\n- \`$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH\`\n> *Requester*\n- \`$CIRCLE_USERNAME\`"
              },
              "accessory": {
                "type": "image",
                "image_url": "https://i.ibb.co/fY8r1g7/free-icon-idea-3854721.png",
                "alt_text": "Status Image"
              }
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Req No.* : \`$CIRCLE_WORKFLOW_ID\`\n*Job Status* : :large_green_circle:"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "CircleCI",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "${CIRCLE_BUILD_URL}",
                "action_id": "button-action"
              }
            },
            {
              "type": "divider"
            }
          ]
        }
      slack_deploy_success: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$PLATFORM 의 배포가 성공했습니다.",
                "emoji": true
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ">When : $(date +'%Y/%m/%d @%T')\n>SHA1 : $CIRCLE_SHA1"
                }
              ]
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                  "type": "mrkdwn",
                  "text": "> *Branch*\n- \`$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH\`\n> *Requester*\n- \`$CIRCLE_USERNAME\`"
              },
              "accessory": {
                "type": "image",
                "image_url": "https://i.ibb.co/52X6Dnc/free-icon-backlog-5229430.png",
                "alt_text": "Status Image"
              }
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Req No.* : \`$CIRCLE_WORKFLOW_ID\`\n*Job Status* : :large_green_circle:"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "CircleCI",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "${CIRCLE_BUILD_URL}",
                "action_id": "button-action"
              }
            },
            {
              "type": "divider"
            }
          ]
        }
      slack_test_success: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$PLATFORM 의 모든 테스트를 통과 했습니다.",
                "emoji": true
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": ">When : $(date +'%Y/%m/%d @%T')\n>SHA1 : $CIRCLE_SHA1"
                  
                }
              ]
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                  "type": "mrkdwn",
                  "text": "> *Branch*\n- \`$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH\`\n> *Requester*\n- \`$CIRCLE_USERNAME\`"
              },
              "accessory": {
                "type": "image",
                "image_url": "https://i.ibb.co/MsHs2wm/free-icon-checklist-4624037.png",
                "alt_text": "Status Image"
              }
            },
            {
              "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Req No.* : \`$CIRCLE_WORKFLOW_ID\`\n*Job Status* : :large_green_circle:"
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "CircleCI",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "${CIRCLE_BUILD_URL}",
                "action_id": "button-action"
              }
            },
            {
              "type": "divider"
            } 
          ]
        }
    docker:
      - image: cimg/python:3.9.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/workspace

commands:
  slack_chatie_notify:
    description: ""
    parameters:
      header:
        type: string
      img_url:
        type: string
      event:
        description: |
          In what event should this message send? Options: ["fail", "pass", "always"]
        type: enum
        enum: ["fail", "pass", "always"]
        default: "always"
    steps:
      - slack/notify:
          event: << parameters.event >>
          custom: >
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "<< parameters.header >>",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "$(date +'%Y/%m/%d @%T')"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "CircleCI", "emoji": true
                    },
                    "value": "circle_ci_url",
                    "url": "${CIRCLE_BUILD_URL}",
                    "action_id": "button-action"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "> *작업 브랜치* - `$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH`\n> *작업자* - `$CIRCLE_USERNAME`\n> *개발팀* - <!subteam^S023Z4GR59P>"
                  },
                  "accessory": {
                    "type": "image",
                    "image_url": "<< parameters.img_url >>",
                    "alt_text": "status-image"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }

jobs:
  build:
    executor: luxquad-executor
    parameters:
      deploy_target:
        description: Deploy target name
        type: string
      deploy_target_img:
        description: Deploy target name
        type: string
    steps:
      - slack_chatie_notify:
          header: "${SLACK_APP_PLATFORM}를 '<< parameters.deploy_target >>'에 성공적으로 배포했습니다 :tada:"
          img_url: "<< parameters.deploy_target_img >>"
          event: pass

      - checkout
            
      - restore_cache:
          keys:
          - deps1-{{ .Branch }}-{{ checksum ".misc/requirements/base.txt" }}
          # fallback to using the latest cache if no exact match is found
          - deps1-
                     
      - run:
          name: Install virtual environments
          command: |
            pip install virtualenv
            virtualenv ~/workspace/venv
            
            source ~/workspace/venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade pip-tools
      - run: 
          name: Install dependencies
          command: |
            source ~/workspace/venv/bin/activate
            pip-sync .misc/requirements/test.txt

      - run:
          name: Install Environment
          command: |
            touch .misc/env/prod.env
            env > .misc/env/prod.env

      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: slack_task_fail

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum ".misc/requirements/base.txt" }}
          paths:
            - ./*
        
      - persist_to_workspace:
          root: ./
          paths:
            - ./*

      - store_artifacts:
          name: Save artifacts - tests
          path: ~/workspace/app/tests
          destination: tests


  test:
    executor: luxquad-executor
    steps:
      - attach_workspace:
          at: ~/workspace
          
      - run:
          name: Run tests
          command: |
            source ~/workspace/venv/bin/activate
            sh .misc/scripts/run_tests.sh
            cp -r ~/workspace/.pytest_results ~/workspace/.tests-results

      - store_test_results:
          path: ~/workspace/.tests-results

      - run:
          name: Upload Codecov
          command: |
            source ~/workspace/venv/bin/activate
            codecov -t $CODECOV_TOKEN

      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: slack_task_fail

      - slack/notify:
          event: pass
          template: slack_test_success

      - slack/notify:
          event: pass
          template: slack_build_success
          
  deploy:
    executor: luxquad-executor
    steps:
      - attach_workspace:
          at: ~/workspace

      - setup_remote_docker:
          version: 20.10.2

      - run:
          name: Install Package
          command: |
            sudo apt-get update
            sudo apt-get install sshpass

      - run:
          name: Install Environment
          command: |
            env > .env
            cp .env prod.env
            
      - run:
          name: Login to docker hub
          command: |
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD

      - run:
          name: Build docker image
          command: |
            docker build -t $IMAGE_NAME:latest . -f Dockerfile

      - run:
          name: Deploy docker image
          command: |
            docker push $IMAGE_NAME:latest

      - run:
          name: Release docker image
          command: |
            sshpass -p $RELEASE_PASSWORD ssh -o StrictHostKeyChecking=no $RELEASE_HOST "$RELEASE_HOOK"

      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: slack_task_fail

      - slack/notify:
          event: pass
          template: slack_deploy_success



workflows:
  build-with-test:
    jobs:
      - build:
          filters: &filters-build-with-test
            branches:
              only:
                - develop
                - /^(enhance)[/].+/
                - /^(feature)[/].+/
                - /^(hotfix)[/].+/
                - /^(fix)[/].+/
          deploy_target: "프로덕션 서비스"
          deploy_target_img: "https://user-images.githubusercontent.com/36470472/132519669-d663ee6b-5c9a-4e7f-81c3-380bc9bd430c.png"

      - test:
          requires:
            - build
          filters:
            <<: *filters-build-with-test

  deploy:
    jobs:
      - build:
          filters: &filters-deploy
            branches:
              only:
                - master
                - /^(circleci)[/].+/
          deploy_target: "프로덕션 서비스"
          deploy_target_img: "https://user-images.githubusercontent.com/36470472/132519669-d663ee6b-5c9a-4e7f-81c3-380bc9bd430c.png"

      - test:
          requires:
            - build
          filters:
            <<: *filters-deploy

      - deploy:
          requires:
            - test
          filters:
            <<: *filters-deploy